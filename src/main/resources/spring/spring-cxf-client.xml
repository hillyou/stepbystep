<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs-client"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
          http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
          http://cxf.apache.org/jaxrs-client http://cxf.apache.org/schemas/jaxrs-client.xsd
">

    <!-- Import CXF -->
    <!--    <import resource="classpath:META-INF/cxf/cxf.xml" />
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />-->

    <!-- common beans for cxf web service -->
    <import resource="classpath:spring/spring-cxf-common.xml" />


    <bean id="clientFactoryWS" class="org.apache.cxf.jaxws.JaxWsClientFactoryBean">
        <property name="serviceClass" value="com.study.webservice.CityService"/>
        <property name="address" value="${webservice.address}/ws"/>
    </bean>

    <bean id="cityClientWS" class="com.study.webservice.CityService" factory-bean="clientFactoryWS" factory-method="create"/>

    <!--done-->
    <jaxws:client id="cityClientWS1" name="cityClientWS1Name"
                  serviceClass="com.study.webservice.CityService"
                  address="${webservice.address}/ws" >
        <jaxws:properties>
            <entry key="language" value="zh_CN"/>
        </jaxws:properties>
        <jaxws:inInterceptors>
            <ref bean="loggingInInterceptor"/>
            <!--<ref bean="wSS4JInInterceptor4Client"/>-->
            <!--<ref bean="cryptoCoverageChecker"/>-->
        </jaxws:inInterceptors>
        <jaxws:outInterceptors>
            <ref bean="wSS4JOutInterceptor4Client"/>
            <ref bean="logOutInterceptor"/>
        </jaxws:outInterceptors>
    </jaxws:client>


    <!--done-->
    <bean id="webClientRS" class="org.apache.cxf.jaxrs.client.WebClient" factory-method="create">
        <constructor-arg type="java.lang.String" value="${webservice.address}" />
        <constructor-arg ref="wsMessageProviders"/>
    </bean>

    <bean id="clientFactoryRS" class="org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean">
        <property name="serviceClass" value="com.study.webservice.CityService"/>
        <property name="address" value="${webservice.address}/ws"/>
    </bean>

    <bean id="cityClientRSFac" class="com.study.webservice.CityService" factory-bean="clientFactoryRS" factory-method="create"/>


    <jaxrs:client id="cityClientRS" name="cityClientRSName" address="${webservice.address}/rs" serviceClass="com.study.webservice.CityService">
        <jaxrs:headers>
            <!--            <entry key="Accept" value="application/xml"></entry>-->
            <entry key="Accept" value="application/json"></entry>
        </jaxrs:headers>
        <jaxrs:outInterceptors>
            <ref bean="logOutInterceptor"/>
        </jaxrs:outInterceptors>
        <jaxrs:providers>
            <ref bean="jacksonJsonProvider"/>
            <ref bean="jsonProvider"/>
        </jaxrs:providers>
    </jaxrs:client>


    <bean id="passwordCallback4Client" class="com.study.cxf.common.ClientPasswordCallback">
        <constructor-arg value="client"></constructor-arg>
    </bean>
    <!--  WSS4JInInterceptor for decrypting and validating the signature of inbound SOAP -->
    <bean id="wSS4JInInterceptor4Client" class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor" >
        <constructor-arg>
            <map>
                <entry key="action" value="Timestamp Signature Encrypt"/>
                <entry key="signaturePropFile" value="certs/client/client-crypto.properties"/>
                <entry key="decryptionPropFile" value="certs/client/client-crypto.properties"/>
                <entry key="passwordCallbackRef">
                    <ref bean="passwordCallback4Client"/>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <bean id="wSS4JOutInterceptor4Client" class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
        <constructor-arg>
            <map>
                <!--key: org.apache.wss4j.dom.handler.WSHandlerConstants.ACTION-->
                <!--value: org.apache.wss4j.common.WSS4JConstants.USERNAME_TOKEN_LN-->
                <!--                <entry value="UsernameToken">
                    <key>
                        <util:constant static-field="org.apache.wss4j.dom.handler.WSHandlerConstants.ACTION"/>
                    </key>
                </entry>-->
                <entry key="action" value="UsernameToken"/>
                <entry key="user" value="client"/>
                <!--<entry key="passwordType" value="PasswordText"/>-->
                <!--                <entry key="action" value="Timestamp Signature Encrypt"/>
                <entry key="signaturePropFile" value="certs/client/client-crypto.properties"/>
                <entry key="encryptionPropFile" value="certs/client/client-crypto.properties"/>
                <entry key="signatureKeyIdentifier" value="DirectReference"/>
                <entry key="encryptionUser" value="server"/>
                <entry key="signatureParts" value="{Element}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd}Timestamp;{Element}{http://schemas.xmlsoap.org/soap/envelope/}Body"/>
                <entry key="encryptionParts" value="{Element}{http://www.w3.org/2000/09/xmldsig#}Signature;{Content}{http://schemas.xmlsoap.org/soap/envelope/}Body"/>
                <entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>-->
                <entry key="passwordCallbackRef">
                    <ref bean="passwordCallback4Client"/>
                </entry>
            </map>
        </constructor-arg>
    </bean>

</beans>
