<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
	">

    <!--	<beans:bean id="defaultWebInvocationPrivilegeEvaluator" class="org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator">
            <beans:constructor-arg name="securityInterceptor" ref="OMSFilterSecurityInterceptor" />
    </beans:bean>-->

    <!--	<http pattern="/images/**" security="none" />
    <http pattern="/js/**" security="none" />
    <http pattern="/styles/**" security="none" />
    <http pattern="/ws/**" security="none" />-->
    <http auto-config="true" use-expressions="true">
        <!--		<intercept-url pattern="/login.html" access="permitAll" />
        <intercept-url pattern="/changepassword.html" access="permitAll" />
        <intercept-url pattern="/popdata.html" access="permitAll" />-->
        <intercept-url pattern="/services/**"
                       access="hasAnyRole(
			'csc_admin',
                        'admin_nike'
			)" />

        <!--		<access-denied-handler error-page="/accessDenied.html" />-->
        <!--		<form-login login-page="/login.html" authentication-failure-url="/login.html?error=true"
                default-target-url="/home.html" authentication-success-handler-ref="cantonAuthenticationSuccessHandler"
                authentication-failure-handler-ref="cantonAuthenticationFailureHandler"/>
        <logout logout-url="/logout" logout-success-url="/login.html" invalidate-session="true" />-->

        <!--		<session-management>
                <concurrency-control max-sessions="10" error-if-maximum-exceeded="true" expired-url="/timeout.html" />
        </session-management>-->

        <!--<remember-me key="cantonOms" />-->
        <!--		<custom-filter ref="OMSFilterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />-->
    </http>

    <beans:bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" id="passwordEncoder" />

    <beans:bean class="org.springframework.security.authentication.dao.ReflectionSaltSource" id="saltSource">
        <beans:property name="userPropertyToUse" value="salt" />
    </beans:bean>

    <!--	<beans:bean id="OMSFilterSecurityInterceptor" class="com.bleum.canton.oms.security.manager.impl.OMSFilterSecurityInterceptor">
            <beans:property name="authenticationManager" ref="authenticationManager" />
            <beans:property name="accessDecisionManager" ref="accessService" />
            <beans:property name="securityMetadataSource" ref="resourceService" />
    </beans:bean>-->

    <!--	<beans:bean
            class="com.bleum.canton.oms.security.filter.CantonAuthenticationSuccessHandler"
            id="cantonAuthenticationSuccessHandler" >
    </beans:bean>
    <beans:bean
            class="com.bleum.canton.oms.security.filter.CantonAuthenticationFailureHandler"
            id="cantonAuthenticationFailureHandler" >
            <beans:property name="defaultFailureUrl" value="/login.html?error=true"/>
    </beans:bean>-->

    <!--	<authentication-manager alias="authenticationManager">
            <authentication-provider user-service-ref="userService">
                    <password-encoder ref="passwordEncoder">
                            <salt-source ref="saltSource" />
                    </password-encoder>
            </authentication-provider>
    </authentication-manager>-->

</beans:beans>